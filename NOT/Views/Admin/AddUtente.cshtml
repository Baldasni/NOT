@model NOT.Models.AddUtenteViewModel

@{Layout = "~/Views/Shared/_Layout.cshtml"; }
@{ ViewBag.Title = "Add Utente"; }

<h2> @ViewBag.Title</h2>

@using (Html.BeginForm("AddUtente", "Admin", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    @*<div class="form-horizontal">*@
        <h4>Add Utente</h4>

        <div>
            @Html.ActionLink("Back to Lista Utenti", "ListaUtenti")
        </div>

        <hr />

        @Html.ValidationSummary("", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

    var roleList = NOT.Helper.EnumHelper<NOT.Models.RuoloEnum>.GetValues(NOT.Models.RuoloEnum.Admin); /*Enum.GetValues(typeof(NOT.Models.Ruolo));*/

    List<SelectListItem> listItems = new List<SelectListItem>();

    foreach (NOT.Models.RuoloEnum role in roleList)
    {
        listItems.Add(new SelectListItem
        {
            Text = NOT.Helper.EnumHelper<NOT.Models.RuoloEnum>.GetDisplayValue(role),
            //Text = role.ToString(),
            Value = role.ToString()
        });
    }
            <div class="form-group">
                @Html.LabelFor(m => m.Ruolo, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.Ruolo, listItems, "-- Select Status --", new { @class = "form-control" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10" style="color:green">
                    @ViewBag.Message
                </div>
            </div>
    @*</div>*@
    }
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
